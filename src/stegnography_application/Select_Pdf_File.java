/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stegnography_application;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Azmi
 */
public class Select_Pdf_File extends javax.swing.JFrame {

    //My Private Variables Declaration
    private static String PdfFilePath;
    private static String pdfFileMimeType;
    private static boolean SelectPdfButtonIsPressed = false;
    //End Private Variables Declaration
    
    /**
     * Creates new form Select_Pdf_File
     */
    public Select_Pdf_File() {
        SelectPdfButtonIsPressed = false;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PdfNameLabel = new javax.swing.JLabel();
        SelectPdfButton = new javax.swing.JButton();
        FinishButton = new javax.swing.JButton();
        InformationLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PdfNameLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        PdfNameLabel.setForeground(new java.awt.Color(255, 40, 0));

        SelectPdfButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        SelectPdfButton.setText("Select Pdf File");
        SelectPdfButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        SelectPdfButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectPdfButtonActionPerformed(evt);
            }
        });

        FinishButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        FinishButton.setText("Finish");
        FinishButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        FinishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinishButtonActionPerformed(evt);
            }
        });

        InformationLabel.setBackground(new java.awt.Color(255, 255, 255));
        InformationLabel.setFont(new java.awt.Font("Arial", 3, 16)); // NOI18N
        InformationLabel.setForeground(new java.awt.Color(62, 0, 255));
        InformationLabel.setText("<html>This Pdf File Should Be 8 Times Smaller Than The Cover Image</html>");
        InformationLabel.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(InformationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                    .addComponent(PdfNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FinishButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SelectPdfButton, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PdfNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SelectPdfButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FinishButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InformationLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SelectPdfButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectPdfButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("Files", "pdf");
        chooser.addChoosableFileFilter(fnef);
        int showOpenDialog = chooser.showOpenDialog(null);
        
        try {
            if(showOpenDialog == JFileChooser.APPROVE_OPTION){
                File file = chooser.getSelectedFile();
                String mimetype = Files.probeContentType(file.toPath());

                if(mimetype != null && mimetype.split("/")[1].equals("pdf")){
                    String filePath = file.getAbsolutePath();
                    set_PdfFilePath(filePath);
                    set_PdfFileMimeType(mimetype.split("/")[1]);

                    String fileName = file.getName();
                    PdfNameLabel.setText(fileName);
                }
                else{
                    JOptionPane.showMessageDialog(null, "File Is Not An Text File","WRONG FILE",JOptionPane.ERROR_MESSAGE);
                }

            }
        }
        catch (IOException ex) {
            Logger.getLogger(Select_Text_File.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_SelectPdfButtonActionPerformed

    private void FinishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinishButtonActionPerformed
        // TODO add your handling code here:
        if(SelectPdfButtonIsPressed == true){
            dispose();
        }
        else{
            JOptionPane.showMessageDialog(null, "Select Any Image","IMAGE NOT SELECTED",JOptionPane.ERROR_MESSAGE);
        } 
    }//GEN-LAST:event_FinishButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Select_Pdf_File.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Select_Pdf_File.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Select_Pdf_File.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Select_Pdf_File.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Select_Pdf_File().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FinishButton;
    private javax.swing.JLabel InformationLabel;
    private javax.swing.JLabel PdfNameLabel;
    private javax.swing.JButton SelectPdfButton;
    // End of variables declaration//GEN-END:variables

    /**
     * Create set_PdfFilePath() method to set pdf file path
     */
    private void set_PdfFilePath(String text) {
        PdfFilePath = text;
        SelectPdfButtonIsPressed = true;
    }
    
    /**
     * Create get_PdfFilePath() method to get pdf file path
     * @return 
     */
    public String get_PdfFilePath() {
        return PdfFilePath;
    }

    
    /**
     * Create set_PdfFilePath() method to set pdf file mime type
     */
    private void set_PdfFileMimeType(String text) {
        pdfFileMimeType = text;
    }
    
    /**
     * Create get_PdfFileMimeType() method to get pdf file mime type
     * @return 
     */
    public String get_PdfFileMimeType() {
        return pdfFileMimeType;
    }
    
}
